{"version":3,"sources":["Components/Contacts.module.scss","Components/ContactsForm.jsx","Components/ContactList.jsx","Components/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactsForm","state","name","number","handleNameChange","e","setState","target","value","handleNumberChange","handleButtonSubmit","preventDefault","props","onSubmit","className","s","form","this","htmlFor","id","onChange","type","pattern","title","required","form__button","Component","ContactList","contacts","onClick","contacts__list","map","contact","contacts__button","Filter","filter","App","changeFilter","currentTarget","findContact","normalizeFilter","toLowerCase","includes","handleSubmit","some","alert","prevState","shortid","generate","handleDelContact","idxContact","findIndex","dataset","newContacts","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df6000fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Contacts_form__wqmjl\",\"form__button\":\"Contacts_form__button__3OxqL\",\"filter\":\"Contacts_filter__2NX7D\",\"contacts__list\":\"Contacts_contacts__list__3nslN\",\"contacts__button\":\"Contacts_contacts__button__2OYCu\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contacts.module.scss';\r\n\r\nexport default class ContactsForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleNameChange = e => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handleNumberChange = e => {\r\n    this.setState({ number: e.target.value });\r\n  };\r\n\r\n  handleButtonSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onSubmit({ name, number });\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleButtonSubmit}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          value={this.state.name}\r\n          id=\"name\"\r\n          onChange={this.handleNameChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label htmlFor=\"number\">Number</label>\r\n        <input\r\n          value={this.state.number}\r\n          id=\"number\"\r\n          onChange={this.handleNumberChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <button className={s.form__button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactsForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contacts.module.scss';\r\n\r\nexport default function ContactList({ title, contacts, onClick }) {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      <ul className={s.contacts__list}>\r\n        {contacts.map(contact => {\r\n          return (\r\n            <li key={contact.id}>\r\n              {contact.name}: {contact.number}\r\n              <button\r\n                className={s.contacts__button}\r\n                data-id={contact.id}\r\n                onClick={onClick}\r\n                type=\"button\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  handleDel: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contacts.module.scss';\r\n\r\nexport default function Filter({ onChange, filter }) {\r\n  return (\r\n    <>\r\n      <label className={s.filter} htmlFor=\"findname\">\r\n        Find contacts by name\r\n        <input id=\"findname\" type=\"text\" onChange={onChange} value={filter} />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n// import debounce from 'lodash.debounce';\n\nimport ContactsForm from 'Components/ContactsForm';\nimport ContactsList from 'Components/ContactList';\nimport Filter from 'Components/Filter.jsx';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  findContact = () => {\n    const normalizeFilter = this.state.filter.toLowerCase();\n    const filterContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n    return filterContacts;\n  };\n\n  handleSubmit = ({ name, number }) => {\n    const includesName = this.state.contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (includesName) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [\n        ...prevState.contacts,\n        {\n          name,\n          number,\n          id: shortid.generate(),\n        },\n      ],\n    }));\n  };\n\n  handleDelContact = e => {\n    const idxContact = this.state.contacts.findIndex(contact => {\n      return contact.id === e.target.dataset.id;\n    });\n\n    this.setState(prevState => {\n      const newContacts = [...prevState.contacts];\n      newContacts.splice(idxContact, 1);\n      return {\n        contacts: [...newContacts],\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactsForm onSubmit={this.handleSubmit} />\n        <h2>Contacts</h2>\n        <Filter\n          contacts={this.state.contacts}\n          filter={this.state.filter}\n          title=\"Find contacts by name\"\n          onChange={this.changeFilter}\n        />\n        <ContactsList\n          onClick={this.handleDelContact}\n          contacts={this.findContact()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}